/*
 * SPDX-License-Identifier: Apache-2.0
 * SPDX-FileCopyrightText: Copyright (c) 2024 Andrew Featherstone
 * SPDX-FileCopyrightText: Copyright 2025 Sam Blenny
 *
 * Derived from zephyrproject-rtos/zephyr/boards/raspberrypi/rpi_pico2.
 * Original rpi_pico2 board def by Andrew Featherstone.
 * Adapted for Feather RP2350 by Sam Blenny. 
 */

/dts-v1/;

#include <raspberrypi/rpi_pico/rp2350a.dtsi>
#include <raspberrypi/rpi_pico/m33.dtsi>
#include <freq.h>
#include <zephyr/dt-bindings/i2c/i2c.h>
#include <zephyr/dt-bindings/pwm/pwm.h>
#include <zephyr/dt-bindings/pinctrl/rpi-pico-rp2350a-pinctrl.h>

#include "feather_connector.dtsi"

/* pinctrl config for Feather RP2350 board pinout.
 # See
 * - zephyr/include/zephyr/dt-bindings/pinctrl/rpi-pico-pinctrl-common.h
 * - zephyr/include/zephyr/dt-bindings/pinctrl/rpi-pico-rp2350-pinctrl-common.h
 * - zephyr/include/zephyr/dt-bindings/pinctrl/rpi-pico-rp2350a-pinctrl.h
 * for definitions of UART0_TX_P0, UART0_RX_P1, etc.
 */
&pinctrl {
	uart0_default: uart0_default {
		group1 {
			pinmux = <UART0_TX_P0>;
		};
		group2 {
			pinmux = <UART0_RX_P1>;
			input-enable;
		};
	};
	i2c1_default: i2c1_default {
		group1 {
			pinmux = <I2C1_SDA_P2>, <I2C1_SCL_P3>;
			input-enable;
			input-schmitt-enable;
		};
	};
	spi0_default: spi0_default {
		/* WARNING: This is untested and quite possibly broken */
		/* Feather-silk:RP2-pin
		 * D9(CS):GPIO9, SCK:GPIO22, MISO:GPIO20, MOSI:GPIO23
		 * Configuration for chip select is a bit mysterious. I see things
		 * suggesting that it's possible to use any GPIO for the CS line by
		 * giving a cs-gpios property. But, I see no mention of how to resolve
		 * that against the group1 pinmux property which apparently expects a
		 * 3 item array of CS, SCK, TX(MOSI). The Feather MOSI, MISO, and SCK
		 * pins have SPI1 functions, but the only Feather header pin with an
		 * SPI1 CSn function is D5. So, maybe CS has to be D5? That's awkward.
		 * References:
		 * - zephyr/dts/bindings/spi/arm,pl022.yaml
		 * - zephyr/dts/bindings/spi/spi-controller.yaml
         */
		cs-gpios = <&gpio0 9 GPIO_ACTIVE_LOW>;  /* D9 */
		group1 {
			/* This might need a CS pin as first item of list? */
			pinmux = <SPI0_SCK_P22>, <SPI0_TX_P23>;
		};
		group2 {
			pinmux = <SPI0_RX_P20>;
			input-enable;
		};
		status = "okay";
	};
};

/ {
	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,console = &uart0;
		zephyr,shell-uart = &uart0;
		zephyr,code-partition = &code_partition;
	};

	aliases {
		watchdog0 = &wdt0;
	};
};

&flash0 {
	reg = <0x10000000 DT_SIZE_M(4)>;

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		/* Reserved memory for an image definition block. The block is much
		 * smaller than 256 bytes, but in practice the linker places the vector
		 * table at a much larger alignment offset.
		 */
		image_def: partition@0 {
			label = "image_def";
			reg = <0x00000000 0x100>;
			read-only;
		};

		/*
		 * Usable flash. Starts at 0x100, after the image definition block.
		 * The partition size is 4MB minus the 0x100 bytes taken by the
		 * image definition.
		 */
		code_partition: partition@100 {
			label = "code-partition";
			reg = <0x100 (DT_SIZE_M(4) - 0x100)>;
			read-only;
		};
	};
};

&uart0 {
	current-speed = <115200>;
	status = "okay";
	pinctrl-0 = <&uart0_default>;
	pinctrl-names = "default";
};

&gpio0 {
	status = "okay";
};

&spi0 {
	clock-frequency = <DT_FREQ_M(8)>;
	pinctrl-0 = <&spi0_default>;
	pinctrl-names = "default";
};

&i2c1 {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	pinctrl-0 = <&i2c1_default>;
	pinctrl-names = "default";
	status = "okay";
};

&timer0 {
	status = "okay";
};

zephyr_udc0: &usbd {
	status = "okay";
};

pico_serial: &uart0 {};
